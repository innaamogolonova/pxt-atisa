name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # (keep OIDC steps you already had)
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string

      # --- Build your PXT target (using your forks) ---
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clone PXT forks
        run: |
          git clone https://github.com/innaamogolonova/pxt
          git clone https://github.com/innaamogolonova/pxt-library

      - name: Build PXT core
        run: |
          cd pxt
          npm i
          npm run build
          cd ..
          cd pxt-library
          npm i 
          cd ..

      - name: Prepare target and link repos
        run: |
          npm i -g pxt
          pxt link ./pxt
          pxt link ./pxt-library
          rm -rf node_modules/pxt-core node_modules/pxt-library
          npm i

      - name: Produce static site
        run: pxt staticpkg --output built/packaged

      # --- Deploy the built static files ---
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_VICTORIOUS_MUD_055C88C10 }}
          action: "upload"
          app_location: "."            # repo root
          api_location: ""             # no API
          output_location: "built/packaged"
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"

